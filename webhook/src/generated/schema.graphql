# source: http://localhost:4000
# timestamp: Sat Oct 20 2018 18:05:07 GMT+0200 (Central European Summer Time)

type Conversation {
  id: ID!
  slackId: String!
  organiseCompetition: Boolean!
  sendEngagementMessages: Boolean!
}

input ConversationSettingsInput {
  organiseCompetition: Boolean!
  sendEngagementMessages: Boolean!
}

type CreateWorkspacePayload {
  success: Boolean!
}

scalar DateTime

type Kudo {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  sentBy: Member!
  receivedBy: Member!
  sentInConversation: Conversation!
  message: String
  public: Boolean!
}

enum LeaderboardOrder {
  BEST_OVERALL
  MOST_GIVEN_FIRST
  MOST_RECIEVED_FIRST
}

type Member {
  id: ID!
  slackId: String!
  kudosSent: [Kudo!]!
  kudosReceived: [Kudo!]!
  receiveNotifications: Boolean!
}

type Mutation {
  createConversation(slackId: String!, settings: ConversationSettingsInput!): Conversation!
  updateConversation(slackId: String!, settings: ConversationSettingsInput!): Conversation!
  deleteConversation(slackId: String!): Conversation!
  sendKudos(senderSlackId: String!, recipientSlackId: String!, message: String): Kudo
}

type Query {
  channelLeaderboard(slackId: String!, take: Int, orderBy: LeaderboardOrder!): [Member!]!
  getChannelWeeklyReport(slackId: String!): String!
}

input SendKudoInput {
  senderSlackId: String!
  recipientSlackId: String!
  conversationSlackId: String!
  message: String
  publish: Boolean!
}
